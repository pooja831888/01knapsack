class Solution {
    static int mod=(int)1e9+7;
    
    int countPartitions(int[] arr, int d) {
        int n=arr.length;
        int totalsum=0;
        for(int i=0; i<n; i++)
        {
            totalsum+=arr[i];
        }
        
        if((totalsum+d)%2!=0 || totalsum<d)return 0;
        
        int target=(totalsum+d)/2;
        
        int [][] dp=new int[n+1][target+1];
        
        for(int i=0; i<=n; i++)
        {
            dp[i][0]=1;
        }
        
        for(int i=1; i<=n; i++)
        {
        for(int j=0; j<=target; j++)
        {
            if(arr[i-1]<=j)
            {
               dp[i][j]=dp[i-1][j]+dp[i-1][j-arr[i-1]]; 
            }
            else
            {
                dp[i][j]=dp[i-1][j];
            }
            
        }
        }
        return dp[n][target];
        
    

    }
}
