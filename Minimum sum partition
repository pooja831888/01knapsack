class Solution {

    public int minDifference(int arr[]) {
        int n=arr.length;
        
        int sum=0;
        for(int i=0; i<n; i++)
        {
            sum+=arr[i];
        }
        
        boolean [][] dp=new boolean[n+1][sum+1];
        
        for(int i=0; i<=n; i++)
        {
            dp[i][0]=true;
        }
        
        for(int i=1; i<=n; i++)
        {
            for(int j=0; j<=sum; j++)
            {
                if(arr[i-1]<=j)
                {
                dp[i][j]=dp[i-1][j]||dp[i-1][j-arr[i-1]];

                }
                else
                {
                    dp[i][j]=dp[i-1][j];
                }
            }
        }
        
        int mindiff=Integer.MAX_VALUE;
        
        for (int s1 = sum / 2; s1 >= 0; s1--) {
            if (dp[n][s1]) {
                mindiff = sum - 2 * s1;
                break;
            }
        }

        return mindiff;
    }
}
